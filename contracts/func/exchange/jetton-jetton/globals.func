{-
meta_data#00 data:(HashMapE 256 ^Cell) : MetaData

storage3#_ fee_to:MsgAddress price0_cumulative_last:uint256
           price1_cumulative_last:uint256 time_elapsed:uint40
           kLast:uint122 = Storage3

storage2#_ left_reserve:(VarUInteger 16) right_reserve:(VarUInteger 16)
           lp_supply:(VarUInteger 16) part3:^Storage3 = Storage2

storage#_ admin_address:MsgAddress left_wallet:MsgAddress
          right_wallet:MsgAddress gas_price:(VarUInteger 16)
          lp_wallet_code:^Cell lp_meta_data:^MetaData
          gateway_code:^Cell part2:^Storage2  = Storage;
-}

global int ton_reserve;

global slice admin_address;
global slice left_wallet;
global slice right_wallet;
global int cfg::gas_price;

global int left_reserve;
global int right_reserve;
global int lp_supply;

global slice fee_to;
global int price0_cumulative_last;
global int price1_cumulative_last;
global int block_timestamp_last;
global int kLast;

global cell lp_wallet_code;
global cell lp_meta_data;
global cell gateway_code;

() initialize_globals(int balance, int msg_value) impure inline {
  ton_reserve = balance - msg_value - cfg::tons_for_storage();

  slice ds = get_data().begin_parse();
  admin_address = ds~load_msg_addr();
  left_wallet = ds~load_msg_addr();
  right_wallet = ds~load_msg_addr();
  cfg::gas_price = ds~load_coins();
  lp_wallet_code = ds~load_ref();
  lp_meta_data = ds~load_ref();
  gateway_code = ds~load_ref();

  slice ds2 = ds~load_ref().begin_parse();
  left_reserve = d2~load_coins();
  right_reserve = d2~load_coins();
  lp_supply = d2~load_coins();

  slice ds3 = ds2~load_ref().begin_parse();
  fee_to = ds3~load_msg_addr();
  price0_cumulative_last = ds3~load_uint(256);
  price0_cumulative_last = ds3~load_uint(256);
  block_timestamp_last = ds3~load_int(40);
  kLast = ds3.preload_uint(122);
}


() save_data() impure {
  set_data(begin_cell()
    .store_slice(admin_address)
    .store_slice(left_wallet)
    .store_coins(right_wallet)
    .store_coins(cfg::gas_price)
    .store_ref(lp_wallet_code)
    .store_ref(lp_meta_data)
    .store_ref(gateway_code)
    .store_ref(begin_cell()
      .store_coins(left_reserve)
      .store_coins(right_reserve)
      .store_coins(lp_supply)
      .store_ref(begin_cell()
        .store_slice(fee_to)
        .store_uint(price0_cumulative_last, 256)
        .store_uint(price0_cumulative_last, 256)
        .store_uint(block_timestamp_last, 40)
        .store_uint(kLast, 122)
        .end_cell())
      .end_cell())
    .end_cell());
}
